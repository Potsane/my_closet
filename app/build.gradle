apply plugin: 'com.android.application'
project.ext {
    supportLibraryVersion = "26.1.0"
    daggerVersion = "2.13"
    butterKnifeVersion = "8.8.1"
    rxJavaVersion = "2.1.0"
    rxAndroidVersion = "2.0.1"
    timberVersion = "4.6.0"
    lifecycleVersion = "1.0.0"
    arch_version = '1.1.0'
    runner_version = '0.5'
    espresso_version = '2.2.2'
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.pmohale.mycloset"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:design:26.1.0'

    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta4'
    implementation 'com.android.support:cardview-v7:26.1.0'

    //Java RX
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.7'

    //timber and 310
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    compile 'com.jakewharton.timber:timber:4.6.0'

    provided 'javax.annotation:jsr250-api:1.0'

    compile "android.arch.lifecycle:extensions:${arch_version}"
    compile "android.arch.persistence.room:runtime:1.1.0-alpha1"

    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    // if you use the support libraries

    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

    annotationProcessor "android.arch.lifecycle:compiler:${arch_version}"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.0-alpha1"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.10.0'
    testCompile("android.arch.core:core-testing:${arch_version}", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })

    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile('org.threeten:threetenbp:1.3.2') {
        exclude module: "com.jakewharton.threetenabp:threetenabp:1.0.5"
    }
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    androidTestCompile("android.arch.core:core-testing:${arch_version}", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
    androidTestCompile 'org.mockito:mockito-android:2.7.19'

    androidTestCompile("com.android.support.test:runner:${runner_version}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile("com.android.support.test:rules:${runner_version}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-core:${espresso_version}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

}
